SET(GX_ENGINE_SRC_DIR "${CMAKE_SOURCE_DIR}/gearoenix/")
SET(GX_ENGINE_SRC_DIR ${GX_ENGINE_SRC_DIR} PARENT_SCOPE)

MESSAGE(STATUS "Source directory is '${GX_ENGINE_SRC_DIR}'.")
MESSAGE(STATUS "Source libraries are ${GX_LIBS}.")

SET(GX_ENGINE_SRC
        "${GX_ENGINE_SRC_DIR}audio/au-audio.cpp"
        "${GX_ENGINE_SRC_DIR}audio/au-audio.hpp"
        "${GX_ENGINE_SRC_DIR}audio/au-manager.cpp"
        "${GX_ENGINE_SRC_DIR}audio/au-manager.hpp"
        "${GX_ENGINE_SRC_DIR}audio/au-music.cpp"
        "${GX_ENGINE_SRC_DIR}audio/au-music.hpp"
        "${GX_ENGINE_SRC_DIR}audio/au-speaker.cpp"
        "${GX_ENGINE_SRC_DIR}audio/au-speaker.hpp"
        "${GX_ENGINE_SRC_DIR}audio/au-type.cpp"
        "${GX_ENGINE_SRC_DIR}audio/au-type.hpp"
        "${GX_ENGINE_SRC_DIR}core/asset/cr-asset-manager.cpp"
        "${GX_ENGINE_SRC_DIR}core/asset/cr-asset-manager.hpp"
        "${GX_ENGINE_SRC_DIR}core/asset/cr-asset-type.hpp"
        "${GX_ENGINE_SRC_DIR}core/asset/cr-asset.hpp"
        "${GX_ENGINE_SRC_DIR}core/cache/cr-cache-cacher.cpp"
        "${GX_ENGINE_SRC_DIR}core/cache/cr-cache-cacher.hpp"
        "${GX_ENGINE_SRC_DIR}core/cache/cr-cache-file.cpp"
        "${GX_ENGINE_SRC_DIR}core/cache/cr-cache-file.hpp"
        "${GX_ENGINE_SRC_DIR}core/cr-application.cpp"
        "${GX_ENGINE_SRC_DIR}core/cr-application.hpp"
        "${GX_ENGINE_SRC_DIR}core/cr-build-configuration.hpp"
        "${GX_ENGINE_SRC_DIR}core/cr-function-loader.cpp"
        "${GX_ENGINE_SRC_DIR}core/cr-function-loader.hpp"
        "${GX_ENGINE_SRC_DIR}core/cr-language.hpp"
        "${GX_ENGINE_SRC_DIR}core/cr-pool.hpp"
        "${GX_ENGINE_SRC_DIR}core/cr-preprocessor-loop.hpp"
        "${GX_ENGINE_SRC_DIR}core/cr-static.hpp"
        "${GX_ENGINE_SRC_DIR}core/cr-string.cpp"
        "${GX_ENGINE_SRC_DIR}core/cr-string.hpp"
        "${GX_ENGINE_SRC_DIR}core/cr-types.hpp"
        "${GX_ENGINE_SRC_DIR}core/event/cr-ev-button.hpp"
        "${GX_ENGINE_SRC_DIR}core/event/cr-ev-engine.cpp"
        "${GX_ENGINE_SRC_DIR}core/event/cr-ev-engine.hpp"
        "${GX_ENGINE_SRC_DIR}core/event/cr-ev-event.hpp"
        "${GX_ENGINE_SRC_DIR}core/event/cr-ev-gesture.hpp"
        "${GX_ENGINE_SRC_DIR}core/event/cr-ev-id.hpp"
        "${GX_ENGINE_SRC_DIR}core/event/cr-ev-listener.hpp"
        "${GX_ENGINE_SRC_DIR}core/event/cr-ev-movement.hpp"
        "${GX_ENGINE_SRC_DIR}core/event/cr-ev-system.hpp"
        "${GX_ENGINE_SRC_DIR}core/event/cr-ev-ui.hpp"
        "${GX_ENGINE_SRC_DIR}core/gc/cr-gc-object.cpp"
        "${GX_ENGINE_SRC_DIR}core/gc/cr-gc-object.hpp"
        "${GX_ENGINE_SRC_DIR}core/gc/cr-gc-range.cpp"
        "${GX_ENGINE_SRC_DIR}core/gc/cr-gc-range.hpp"
        "${GX_ENGINE_SRC_DIR}core/gc/cr-gc.cpp"
        "${GX_ENGINE_SRC_DIR}core/gc/cr-gc.hpp"
        "${GX_ENGINE_SRC_DIR}core/graph/cr-gr-graph.cpp"
        "${GX_ENGINE_SRC_DIR}core/graph/cr-gr-graph.hpp"
        "${GX_ENGINE_SRC_DIR}core/graph/cr-gr-link.cpp"
        "${GX_ENGINE_SRC_DIR}core/graph/cr-gr-link.hpp"
        "${GX_ENGINE_SRC_DIR}core/graph/cr-gr-node.cpp"
        "${GX_ENGINE_SRC_DIR}core/graph/cr-gr-node.hpp"
        "${GX_ENGINE_SRC_DIR}core/list/cr-list-node.cpp"
        "${GX_ENGINE_SRC_DIR}core/list/cr-list-node.hpp"
        "${GX_ENGINE_SRC_DIR}core/list/cr-list.cpp"
        "${GX_ENGINE_SRC_DIR}core/list/cr-list.hpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-channel.hpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-channeled-workers.cpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-channeled-workers.hpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-end-caller.cpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-end-caller.hpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-kernel-workers.cpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-kernel-workers.hpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-semaphore.cpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-semaphore.hpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-stop-point.cpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-stop-point.hpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-work-waiter.cpp"
        "${GX_ENGINE_SRC_DIR}core/sync/cr-sync-work-waiter.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/buffer/dx11-buf-mesh.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/buffer/dx11-buf-mesh.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/buffer/dx11-buf-uniform.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/buffer/dx11-buf-uniform.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/dx11-check.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/dx11-engine.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/dx11-engine.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/pipeline/dx11-pip-pipeline.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/pipeline/dx11-pip-pipeline.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shader.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shader.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-depth.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-depth.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-colored-matte-nonreflective-shadowless-opaque.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-colored-matte-nonreflective-shadowless-opaque.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-colored-speculated-baked-full-opaque.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-colored-speculated-baked-full-opaque.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-colored-speculated-baked-shadowless-opaque.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-colored-speculated-baked-shadowless-opaque.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-colored-speculated-nonreflective-shadowless-opaque.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-colored-speculated-nonreflective-shadowless-opaque.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-d2-speculated-baked-full-opaque.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-d2-speculated-baked-full-opaque.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-d2-speculated-nonreflective-full-opaque.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-d2-speculated-nonreflective-full-opaque.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-d2-speculated-nonreflective-shadowless-opaque.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-directional-d2-speculated-nonreflective-shadowless-opaque.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-font-colored.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-font-colored.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-resources.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-resources.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-shadeless-colored-matte-nonreflective-shadowless-opaque.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-shadeless-colored-matte-nonreflective-shadowless-opaque.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-shadeless-cube-matte-nonreflective-shadowless-opaque.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-shadeless-cube-matte-nonreflective-shadowless-opaque.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-shadeless-d2-matte-nonreflective-shadowless-opaque.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-shadeless-d2-matte-nonreflective-shadowless-opaque.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-skybox-basic.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/shader/dx11-shd-skybox-basic.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/texture/dx11-txt-2d.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/texture/dx11-txt-2d.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/texture/dx11-txt-cube.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/texture/dx11-txt-cube.hpp"
        "${GX_ENGINE_SRC_DIR}dx11/texture/dx11-txt-sampler.cpp"
        "${GX_ENGINE_SRC_DIR}dx11/texture/dx11-txt-sampler.hpp"
        "${GX_ENGINE_SRC_DIR}gl/gl-constants.hpp"
        "${GX_ENGINE_SRC_DIR}gl/gl-loader.cpp"
        "${GX_ENGINE_SRC_DIR}gl/gl-loader.hpp"
        "${GX_ENGINE_SRC_DIR}gl/gl-types.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/buffer/gles2-buf-index.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/buffer/gles2-buf-index.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/buffer/gles2-buf-manager.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/buffer/gles2-buf-manager.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/buffer/gles2-buf-uniform.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/buffer/gles2-buf-uniform.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/buffer/gles2-buf-vertex.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/buffer/gles2-buf-vertex.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/command/gles2-cmd-buffer.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/command/gles2-cmd-buffer.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/command/gles2-cmd-manager.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/command/gles2-cmd-manager.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/engine/gles2-eng-engine.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/engine/gles2-eng-engine.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/gles2.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-forward-pbr-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-forward-pbr-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-forward-pbr.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-forward-pbr.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-manager.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-manager.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-pipeline.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-pipeline.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-shadow-mapper-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-shadow-mapper-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-shadow-mapper.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-shadow-mapper.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-skybox-equirectangular-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-skybox-equirectangular-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-skybox-equirectangular.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-skybox-equirectangular.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-unlit-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-unlit-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-unlit.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/pipeline/gles2-pip-unlit.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/shader/gles2-shd-forward-pbr.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/shader/gles2-shd-forward-pbr.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/shader/gles2-shd-unlit.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/shader/gles2-shd-unlit.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/shader/gles2-shd-shader.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/shader/gles2-shd-shader.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/shader/gles2-shd-shadow-mapper.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/shader/gles2-shd-shadow-mapper.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/shader/gles2-shd-skybox-equirectangular.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/shader/gles2-shd-skybox-equirectangular.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/sync/gles2-sy-semaphore.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/sync/gles2-sy-semaphore.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-2d.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-2d.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-cube.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-cube.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-sample.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-sample.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-target.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-target.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-target-2d.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-target-2d.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-target-cube.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-target-cube.hpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-texture.cpp"
        "${GX_ENGINE_SRC_DIR}gles2/texture/gles2-txt-texture.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/buffer/glc3-buf-index.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/buffer/glc3-buf-index.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/buffer/glc3-buf-manager.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/buffer/glc3-buf-manager.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/buffer/glc3-buf-uniform.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/buffer/glc3-buf-uniform.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/buffer/glc3-buf-vertex.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/buffer/glc3-buf-vertex.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/command/glc3-cmd-buffer.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/command/glc3-cmd-buffer.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/command/glc3-cmd-manager.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/command/glc3-cmd-manager.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/engine/glc3-eng-engine.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/engine/glc3-eng-engine.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/glc3.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-forward-pbr-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-forward-pbr-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-forward-pbr.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-forward-pbr.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-manager.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-manager.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-pipeline.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-pipeline.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-shadow-mapper-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-shadow-mapper-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-shadow-mapper.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-shadow-mapper.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-skybox-cube-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-skybox-cube-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-skybox-cube.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-skybox-cube.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-skybox-equirectangular-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-skybox-equirectangular-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-skybox-equirectangular.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-skybox-equirectangular.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-unlit-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-unlit-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-unlit.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/pipeline/glc3-pip-unlit.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/shader/glc3-shd-forward-pbr.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/shader/glc3-shd-forward-pbr.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/shader/glc3-shd-unlit.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/shader/glc3-shd-unlit.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/shader/glc3-shd-shader.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/shader/glc3-shd-shader.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/shader/glc3-shd-shadow-mapper.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/shader/glc3-shd-shadow-mapper.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/shader/glc3-shd-skybox-equirectangular.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/shader/glc3-shd-skybox-equirectangular.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/sync/glc3-sy-semaphore.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/sync/glc3-sy-semaphore.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-2d.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-2d.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-cube.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-cube.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-sample.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-sample.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-target.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-target.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-target-2d.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-target-2d.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-target-cube.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-target-cube.hpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-texture.cpp"
        "${GX_ENGINE_SRC_DIR}glc3/texture/glc3-txt-texture.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-aabb.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-aabb.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-bezier-curve.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-bezier-curve.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-frustum.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-frustum.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-intersection-status.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-intersection-status.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-matrix.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-matrix.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-numeric.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-numeric.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-plane.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-plane.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-plotter.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-plotter.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-projector-frustum.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-projector-frustum.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-quaternion.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-quaternion.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-ray.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-ray.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-sphere.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-sphere.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-triangle.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-triangle.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-vector.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-vector.hpp"
        "${GX_ENGINE_SRC_DIR}math/math-vertex.cpp"
        "${GX_ENGINE_SRC_DIR}math/math-vertex.hpp"
        "${GX_ENGINE_SRC_DIR}physics/accelerator/phs-acc-bvh.cpp"
        "${GX_ENGINE_SRC_DIR}physics/accelerator/phs-acc-bvh.hpp"
        "${GX_ENGINE_SRC_DIR}physics/animation/phs-anm-animation.cpp"
        "${GX_ENGINE_SRC_DIR}physics/animation/phs-anm-animation.hpp"
        "${GX_ENGINE_SRC_DIR}physics/animation/phs-anm-manager.cpp"
        "${GX_ENGINE_SRC_DIR}physics/animation/phs-anm-manager.hpp"
        "${GX_ENGINE_SRC_DIR}physics/body/phs-bd-body.cpp"
        "${GX_ENGINE_SRC_DIR}physics/body/phs-bd-body.hpp"
        "${GX_ENGINE_SRC_DIR}physics/body/phs-bd-rigid.cpp"
        "${GX_ENGINE_SRC_DIR}physics/body/phs-bd-rigid.hpp"
        "${GX_ENGINE_SRC_DIR}physics/body/phs-bd-static.cpp"
        "${GX_ENGINE_SRC_DIR}physics/body/phs-bd-static.hpp"
        "${GX_ENGINE_SRC_DIR}physics/collider/phs-cld-aabb.hpp"
        "${GX_ENGINE_SRC_DIR}physics/collider/phs-cld-collider.cpp"
        "${GX_ENGINE_SRC_DIR}physics/collider/phs-cld-collider.hpp"
        "${GX_ENGINE_SRC_DIR}physics/collider/phs-cld-frustum.cpp"
        "${GX_ENGINE_SRC_DIR}physics/collider/phs-cld-frustum.hpp"
        "${GX_ENGINE_SRC_DIR}physics/collider/phs-cld-ghost.hpp"
        "${GX_ENGINE_SRC_DIR}physics/collider/phs-cld-mesh.cpp"
        "${GX_ENGINE_SRC_DIR}physics/collider/phs-cld-mesh.hpp"
        "${GX_ENGINE_SRC_DIR}physics/collider/phs-cld-sphere.cpp"
        "${GX_ENGINE_SRC_DIR}physics/collider/phs-cld-sphere.hpp"
        "${GX_ENGINE_SRC_DIR}physics/constraint/phs-cns-constraint.cpp"
        "${GX_ENGINE_SRC_DIR}physics/constraint/phs-cns-constraint.hpp"
        "${GX_ENGINE_SRC_DIR}physics/constraint/phs-cns-manager.cpp"
        "${GX_ENGINE_SRC_DIR}physics/constraint/phs-cns-manager.hpp"
        "${GX_ENGINE_SRC_DIR}physics/constraint/phs-cns-placer.cpp"
        "${GX_ENGINE_SRC_DIR}physics/constraint/phs-cns-placer.hpp"
        "${GX_ENGINE_SRC_DIR}physics/constraint/phs-cns-tracker-spring-joint-spring.cpp"
        "${GX_ENGINE_SRC_DIR}physics/constraint/phs-cns-tracker-spring-joint-spring.hpp"
        "${GX_ENGINE_SRC_DIR}physics/constraint/phs-cns-type.hpp"
        "${GX_ENGINE_SRC_DIR}physics/phs-engine.cpp"
        "${GX_ENGINE_SRC_DIR}physics/phs-engine.hpp"
        "${GX_ENGINE_SRC_DIR}physics/phs-object.cpp"
        "${GX_ENGINE_SRC_DIR}physics/phs-object.hpp"
        "${GX_ENGINE_SRC_DIR}physics/phs-transformation.cpp"
        "${GX_ENGINE_SRC_DIR}physics/phs-transformation.hpp"
        "${GX_ENGINE_SRC_DIR}render/buffer/rnd-buf-buffer.cpp"
        "${GX_ENGINE_SRC_DIR}render/buffer/rnd-buf-buffer.hpp"
        "${GX_ENGINE_SRC_DIR}render/buffer/rnd-buf-dynamic.cpp"
        "${GX_ENGINE_SRC_DIR}render/buffer/rnd-buf-dynamic.hpp"
        "${GX_ENGINE_SRC_DIR}render/buffer/rnd-buf-framed-uniform.cpp"
        "${GX_ENGINE_SRC_DIR}render/buffer/rnd-buf-framed-uniform.hpp"
        "${GX_ENGINE_SRC_DIR}render/buffer/rnd-buf-manager.cpp"
        "${GX_ENGINE_SRC_DIR}render/buffer/rnd-buf-manager.hpp"
        "${GX_ENGINE_SRC_DIR}render/buffer/rnd-buf-static.cpp"
        "${GX_ENGINE_SRC_DIR}render/buffer/rnd-buf-static.hpp"
        "${GX_ENGINE_SRC_DIR}render/buffer/rnd-buf-uniform.cpp"
        "${GX_ENGINE_SRC_DIR}render/buffer/rnd-buf-uniform.hpp"
        "${GX_ENGINE_SRC_DIR}render/camera/rnd-cmr-camera.cpp"
        "${GX_ENGINE_SRC_DIR}render/camera/rnd-cmr-camera.hpp"
        "${GX_ENGINE_SRC_DIR}render/camera/rnd-cmr-manager.cpp"
        "${GX_ENGINE_SRC_DIR}render/camera/rnd-cmr-manager.hpp"
        "${GX_ENGINE_SRC_DIR}render/camera/rnd-cmr-orthographic.cpp"
        "${GX_ENGINE_SRC_DIR}render/camera/rnd-cmr-orthographic.hpp"
        "${GX_ENGINE_SRC_DIR}render/camera/rnd-cmr-perspective.cpp"
        "${GX_ENGINE_SRC_DIR}render/camera/rnd-cmr-perspective.hpp"
        "${GX_ENGINE_SRC_DIR}render/camera/rnd-cmr-transformation.cpp"
        "${GX_ENGINE_SRC_DIR}render/camera/rnd-cmr-transformation.hpp"
        "${GX_ENGINE_SRC_DIR}render/camera/rnd-cmr-uniform.cpp"
        "${GX_ENGINE_SRC_DIR}render/camera/rnd-cmr-uniform.hpp"
        "${GX_ENGINE_SRC_DIR}render/command/rnd-cmd-buffer.cpp"
        "${GX_ENGINE_SRC_DIR}render/command/rnd-cmd-buffer.hpp"
        "${GX_ENGINE_SRC_DIR}render/command/rnd-cmd-manager.cpp"
        "${GX_ENGINE_SRC_DIR}render/command/rnd-cmd-manager.hpp"
        "${GX_ENGINE_SRC_DIR}render/engine/rnd-eng-configuration.hpp"
        "${GX_ENGINE_SRC_DIR}render/engine/rnd-eng-engine.cpp"
        "${GX_ENGINE_SRC_DIR}render/engine/rnd-eng-engine.hpp"
        "${GX_ENGINE_SRC_DIR}render/engine/rnd-eng-limitations.hpp"
        "${GX_ENGINE_SRC_DIR}render/engine/rnd-eng-type.cpp"
        "${GX_ENGINE_SRC_DIR}render/engine/rnd-eng-type.hpp"
        "${GX_ENGINE_SRC_DIR}render/font/rnd-fnt-2d.cpp"
        "${GX_ENGINE_SRC_DIR}render/font/rnd-fnt-2d.hpp"
        "${GX_ENGINE_SRC_DIR}render/font/rnd-fnt-font.cpp"
        "${GX_ENGINE_SRC_DIR}render/font/rnd-fnt-font.hpp"
        "${GX_ENGINE_SRC_DIR}render/font/rnd-fnt-manager.cpp"
        "${GX_ENGINE_SRC_DIR}render/font/rnd-fnt-manager.hpp"
        "${GX_ENGINE_SRC_DIR}render/font/rnd-fnt-type.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-deferred.cpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-deferred.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-skybox-equirectangular.cpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-skybox-equirectangular.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-forward-pbr.cpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-forward-pbr.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-frame-start.cpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-frame-start.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-g-buffer-filler.cpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-g-buffer-filler.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-node.cpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-node.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-shadow-accumulator.cpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-shadow-accumulator.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-shadow-mapper.cpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-shadow-mapper.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-ssao.cpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-ssao.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-type.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-unlit.cpp"
        "${GX_ENGINE_SRC_DIR}render/graph/node/rnd-gr-nd-unlit.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/tree/rnd-gr-tr-pbr.cpp"
        "${GX_ENGINE_SRC_DIR}render/graph/tree/rnd-gr-tr-pbr.hpp"
        "${GX_ENGINE_SRC_DIR}render/graph/tree/rnd-gr-tr-tree.hpp"
        "${GX_ENGINE_SRC_DIR}render/light/rnd-lt-cascade-info.hpp"
        "${GX_ENGINE_SRC_DIR}render/light/rnd-lt-cascade-info.cpp"
        "${GX_ENGINE_SRC_DIR}render/light/rnd-lt-directional.cpp"
        "${GX_ENGINE_SRC_DIR}render/light/rnd-lt-directional.hpp"
        "${GX_ENGINE_SRC_DIR}render/light/rnd-lt-light.cpp"
        "${GX_ENGINE_SRC_DIR}render/light/rnd-lt-light.hpp"
        "${GX_ENGINE_SRC_DIR}render/light/rnd-lt-manager.cpp"
        "${GX_ENGINE_SRC_DIR}render/light/rnd-lt-manager.hpp"
        "${GX_ENGINE_SRC_DIR}render/light/rnd-lt-point.cpp"
        "${GX_ENGINE_SRC_DIR}render/light/rnd-lt-point.hpp"
        "${GX_ENGINE_SRC_DIR}render/light/rnd-lt-type.hpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-material.cpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-material.hpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-pbr.cpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-pbr.hpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-skybox-cube.cpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-skybox-cube.hpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-skybox-equirectangular.cpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-skybox-equirectangular.hpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-translucency-mode.cpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-translucency-mode.hpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-type.hpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-unlit.cpp"
        "${GX_ENGINE_SRC_DIR}render/material/rnd-mat-unlit.hpp"
        "${GX_ENGINE_SRC_DIR}render/mesh/rnd-msh-manager.cpp"
        "${GX_ENGINE_SRC_DIR}render/mesh/rnd-msh-manager.hpp"
        "${GX_ENGINE_SRC_DIR}render/mesh/rnd-msh-mesh.cpp"
        "${GX_ENGINE_SRC_DIR}render/mesh/rnd-msh-mesh.hpp"
        "${GX_ENGINE_SRC_DIR}render/mesh/rnd-msh-type.hpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-dynamic.cpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-dynamic.hpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-manager.cpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-manager.hpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-mesh.cpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-mesh.hpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-model.cpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-model.hpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-static.cpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-static.hpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-transformation.cpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-transformation.hpp"
        "${GX_ENGINE_SRC_DIR}render/model/rnd-mdl-type.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-forward-pbr-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-forward-pbr-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-forward-pbr.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-forward-pbr.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-manager.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-manager.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-pipeline.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-pipeline.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-shadow-mapper-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-shadow-mapper-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-shadow-mapper.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-shadow-mapper.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-skybox-cube.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-skybox-cube.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-skybox-cube-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-skybox-cube-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-skybox-equirectangular.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-skybox-equirectangular.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-skybox-equirectangular-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-skybox-equirectangular-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-type.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-unlit.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-unlit.hpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-unlit-resource-set.cpp"
        "${GX_ENGINE_SRC_DIR}render/pipeline/rnd-pip-unlit-resource-set.hpp"
        "${GX_ENGINE_SRC_DIR}render/sampler/rnd-smp-manager.cpp"
        "${GX_ENGINE_SRC_DIR}render/sampler/rnd-smp-manager.hpp"
        "${GX_ENGINE_SRC_DIR}render/scene/rnd-scn-game.cpp"
        "${GX_ENGINE_SRC_DIR}render/scene/rnd-scn-game.hpp"
        "${GX_ENGINE_SRC_DIR}render/scene/rnd-scn-manager.cpp"
        "${GX_ENGINE_SRC_DIR}render/scene/rnd-scn-manager.hpp"
        "${GX_ENGINE_SRC_DIR}render/scene/rnd-scn-scene.cpp"
        "${GX_ENGINE_SRC_DIR}render/scene/rnd-scn-scene.hpp"
        "${GX_ENGINE_SRC_DIR}render/scene/rnd-scn-type.cpp"
        "${GX_ENGINE_SRC_DIR}render/scene/rnd-scn-type.hpp"
        "${GX_ENGINE_SRC_DIR}render/scene/rnd-scn-ui.cpp"
        "${GX_ENGINE_SRC_DIR}render/scene/rnd-scn-ui.hpp"
        "${GX_ENGINE_SRC_DIR}render/scene/rnd-scn-uniform.hpp"
        "${GX_ENGINE_SRC_DIR}render/shader/rnd-shd-resources.cpp"
        "${GX_ENGINE_SRC_DIR}render/shader/rnd-shd-resources.hpp"
        "${GX_ENGINE_SRC_DIR}render/shader/rnd-shd-shader.cpp"
        "${GX_ENGINE_SRC_DIR}render/shader/rnd-shd-shader.hpp"
        "${GX_ENGINE_SRC_DIR}render/skybox/rnd-sky-cube.cpp"
        "${GX_ENGINE_SRC_DIR}render/skybox/rnd-sky-cube.hpp"
        "${GX_ENGINE_SRC_DIR}render/skybox/rnd-sky-equirectangular.cpp"
        "${GX_ENGINE_SRC_DIR}render/skybox/rnd-sky-equirectangular.hpp"
        "${GX_ENGINE_SRC_DIR}render/skybox/rnd-sky-manager.cpp"
        "${GX_ENGINE_SRC_DIR}render/skybox/rnd-sky-manager.hpp"
        "${GX_ENGINE_SRC_DIR}render/skybox/rnd-sky-skybox.cpp"
        "${GX_ENGINE_SRC_DIR}render/skybox/rnd-sky-skybox.hpp"
        "${GX_ENGINE_SRC_DIR}render/skybox/rnd-sky-type.cpp"
        "${GX_ENGINE_SRC_DIR}render/skybox/rnd-sky-type.hpp"
        "${GX_ENGINE_SRC_DIR}render/sync/rnd-sy-semaphore.cpp"
        "${GX_ENGINE_SRC_DIR}render/sync/rnd-sy-semaphore.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-filter.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-format.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-image.cpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-image.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-info.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-manager.cpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-manager.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-sample.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-target.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-target-2d.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-target-cube.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-texture-2d.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-texture-cube.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-texture.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-type.hpp"
        "${GX_ENGINE_SRC_DIR}render/texture/rnd-txt-wrap.hpp"
        "${GX_ENGINE_SRC_DIR}render/widget/rnd-wdg-alignment.hpp"
        "${GX_ENGINE_SRC_DIR}render/widget/rnd-wdg-button.cpp"
        "${GX_ENGINE_SRC_DIR}render/widget/rnd-wdg-button.hpp"
        "${GX_ENGINE_SRC_DIR}render/widget/rnd-wdg-edit.cpp"
        "${GX_ENGINE_SRC_DIR}render/widget/rnd-wdg-edit.hpp"
        "${GX_ENGINE_SRC_DIR}render/widget/rnd-wdg-modal.cpp"
        "${GX_ENGINE_SRC_DIR}render/widget/rnd-wdg-modal.hpp"
        "${GX_ENGINE_SRC_DIR}render/widget/rnd-wdg-text.cpp"
        "${GX_ENGINE_SRC_DIR}render/widget/rnd-wdg-text.hpp"
        "${GX_ENGINE_SRC_DIR}render/widget/rnd-wdg-type.hpp"
        "${GX_ENGINE_SRC_DIR}render/widget/rnd-wdg-widget.cpp"
        "${GX_ENGINE_SRC_DIR}render/widget/rnd-wdg-widget.hpp"
        "${GX_ENGINE_SRC_DIR}system/android/sys-and-app.cpp"
        "${GX_ENGINE_SRC_DIR}system/android/sys-and-app.hpp"
        "${GX_ENGINE_SRC_DIR}system/android/sys-and-log.cpp"
        "${GX_ENGINE_SRC_DIR}system/android/sys-and-log.hpp"
        "${GX_ENGINE_SRC_DIR}system/android/sys-gl-context.cpp"
        "${GX_ENGINE_SRC_DIR}system/android/sys-gl-context.hpp"
        "${GX_ENGINE_SRC_DIR}system/glfw/sys-glfw.cpp"
        "${GX_ENGINE_SRC_DIR}system/glfw/sys-glfw.hpp"
        "${GX_ENGINE_SRC_DIR}system/sdl/sys-sdl-app.cpp"
        "${GX_ENGINE_SRC_DIR}system/sdl/sys-sdl-app.hpp"
        "${GX_ENGINE_SRC_DIR}system/stream/sys-stm-asset.cpp"
        "${GX_ENGINE_SRC_DIR}system/stream/sys-stm-asset.hpp"
        "${GX_ENGINE_SRC_DIR}system/stream/sys-stm-local.cpp"
        "${GX_ENGINE_SRC_DIR}system/stream/sys-stm-local.hpp"
        "${GX_ENGINE_SRC_DIR}system/stream/sys-stm-memory.cpp"
        "${GX_ENGINE_SRC_DIR}system/stream/sys-stm-memory.hpp"
        "${GX_ENGINE_SRC_DIR}system/stream/sys-stm-stream.cpp"
        "${GX_ENGINE_SRC_DIR}system/stream/sys-stm-stream.hpp"
        "${GX_ENGINE_SRC_DIR}system/sys-app.cpp"
        "${GX_ENGINE_SRC_DIR}system/sys-app.hpp"
        "${GX_ENGINE_SRC_DIR}system/sys-configuration.hpp"
        "${GX_ENGINE_SRC_DIR}system/sys-log.cpp"
        "${GX_ENGINE_SRC_DIR}system/sys-log.hpp"
        "${GX_ENGINE_SRC_DIR}system/win/sys-win-app.cpp"
        "${GX_ENGINE_SRC_DIR}system/win/sys-win-app.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/buffer/vk-buf-buffer.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/buffer/vk-buf-buffer.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/buffer/vk-buf-dynamic.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/buffer/vk-buf-dynamic.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/buffer/vk-buf-manager.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/buffer/vk-buf-manager.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/buffer/vk-buf-static.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/buffer/vk-buf-static.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/command/vk-cmd-buffer.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/command/vk-cmd-buffer.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/command/vk-cmd-pool.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/command/vk-cmd-pool.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/descriptor/vk-des-pool.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/descriptor/vk-des-pool.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/descriptor/vk-des-set-layout.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/descriptor/vk-des-set-layout.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/descriptor/vk-des-set.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/descriptor/vk-des-set.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/device/vk-dev-logical.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/device/vk-dev-logical.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/device/vk-dev-physical.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/device/vk-dev-physical.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/image/vk-img-image.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/image/vk-img-image.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/image/vk-img-view.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/image/vk-img-view.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/memory/vk-mem-manager.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/memory/vk-mem-manager.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/memory/vk-mem-memory.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/memory/vk-mem-memory.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/memory/vk-mem-sub-memory.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/memory/vk-mem-sub-memory.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/pipeline/vk-pip-cache.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/pipeline/vk-pip-cache.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/pipeline/vk-pip-layout.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/pipeline/vk-pip-layout.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/pipeline/vk-pip-manager.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/pipeline/vk-pip-manager.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/pipeline/vk-pip-pipeline.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/pipeline/vk-pip-pipeline.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/shader/stage/vk-shader-stage-fragment.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/shader/stage/vk-shader-stage-fragment.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/shader/stage/vk-shader-stage-vertex.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/shader/stage/vk-shader-stage-vertex.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/shader/stage/vk-shader-stage.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/shader/stage/vk-shader-stage.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/shader/vk-shd-resources.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/shader/vk-shd-resources.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/sync/vk-sync-fence.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/sync/vk-sync-fence.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/sync/vk-sync-semaphore.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/sync/vk-sync-semaphore.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/texture/vk-txt-sampler-2d.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/texture/vk-txt-sampler-2d.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/texture/vk-txt-texture-2d.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/texture/vk-txt-texture-2d.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/texture/vk-txt-texture-3d.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/texture/vk-txt-texture-3d.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/texture/vk-txt-texture-cube.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/texture/vk-txt-texture-cube.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-check.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-check.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-engine.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-engine.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-framebuffer.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-framebuffer.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-instance.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-instance.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-linker.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-linker.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-render-pass.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-render-pass.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-surface.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-surface.hpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-swapchain.cpp"
        "${GX_ENGINE_SRC_DIR}vulkan/vk-swapchain.hpp")

ADD_LIBRARY(Gearoenix STATIC ${GX_ENGINE_SRC})
TARGET_LINK_LIBRARIES(Gearoenix ${GX_LIBS})