CMAKE_MINIMUM_REQUIRED (VERSION 3.1 FATAL_ERROR)

PROJECT (GEAROENIX)

SET (PROJECT_DESCRIPTION "\"A cross-platform C++ game engine.\"")

SET (GX_VERSION_MAJOR 0)
SET (GX_VERSION_MINOR 2)
SET (GX_VERSION_PATCH 0)
SET (GX_VERSION "${GX_VERSION_MAJOR}.${GX_VERSION_MINOR}.${GX_VERSION_PATCH}")

OPTION (GX_USE_SDL2 "Use SDL2 library" ON)
OPTION (GX_USE_OPENGL_ES2 "Activate OpenGL ES 2" ON)
OPTION (GX_USE_OPENGL_ES3 "Activate OpenGL ES 3 (WIP)" OFF)
OPTION (GX_USE_OPENGL_43 "Activate OpenGL 4.3+ (WIP)" OFF)
OPTION (GX_USE_VULKAN "Activate Vulkan (WIP)" OFF)
OPTION (GX_GENERATE_DOCUMENTS "Generate documentation" ON)

SET (CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/modules/")
SET (CMAKE_CXX_STANDARD 17)
SET (CMAKE_CXX_STANDARD_REQUIRED ON)
SET (GX_PATH_SEP "/")

IF (CMAKE_BUILD_TYPE MATCHES "Debug" AND NOT MSVC)
    INCLUDE (CodeCoverage)
    APPEND_COVERAGE_COMPILER_FLAGS ()
    SET (COVERAGE_EXCLUDES 
        "/usr/*"
        "${CMAKE_SOURCE_DIR}/examples/*"
        "${CMAKE_SOURCE_DIR}/sdk/*"
        "${CMAKE_SOURCE_DIR}/tests/*")
    SETUP_TARGET_FOR_COVERAGE (NAME GX_COVERAGE EXECUTABLE ctest DEPENDENCIES GX_TESTS)
ENDIF (CMAKE_BUILD_TYPE MATCHES "Debug" AND NOT MSVC)

IF (MSVC)
    OPTION (GX_USE_DIRECTX11 "Activate Direct3DX 11 (WIP)" OFF)
    OPTION (GX_USE_DIRECTX12 "Activate Direct3DX 12 (WIP)" OFF)
    SET (GX_PATH_SEP "\\")
    SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /std:c++17 /W4")
    FUNCTION (GX_MAKE_LIB GX_CROSS_LIB_FILE GX_LIB_NAME)
        SET (${GX_CROSS_LIB_FILE} "${GX_LIB_NAME}.lib" PARENT_SCOPE)
    ENDFUNCTION (GX_MAKE_LIB)
ELSE ()
    SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -Wall -Wextra")
    FUNCTION (GX_MAKE_LIB GX_CROSS_LIB_FILE GX_LIB_NAME)
        SET (${GX_CROSS_LIB_FILE} "lib${GX_LIB_NAME}.a" PARENT_SCOPE)
    ENDFUNCTION (GX_MAKE_LIB)
ENDIF (MSVC)

SET (GX_SDK_PATH "${CMAKE_SOURCE_DIR}/sdk/")
MESSAGE (STATUS "Gearoenix SDK path is '${GX_SDK_PATH}'.")

SET (GX_SDK_LIB_PATH "${GX_SDK_PATH}libs/")
MESSAGE (STATUS "Gearoenix SDK libs path is '${GX_SDK_LIB_PATH}'.")

SET (BOOST_INCLUDE_DIRS "${GX_SDK_PATH}/boost")
SET (GLM_INCLUDE_DIRS "${GX_SDK_PATH}/glm")
SET (SDL2_INCLUDE_DIRS "${GX_SDK_PATH}/SDL2/include")
SET (STB_INCLUDE_DIRS "${GX_SDK_PATH}/stb")

SET (DEFAULT_BUILD_TYPE "MinSizeRel")
if (EXISTS "${CMAKE_SOURCE_DIR}/.git")
    SET (DEFAULT_BUILD_TYPE "Debug")
endif ()
 
IF (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
    MESSAGE (STATUS "Setting build type to '${DEFAULT_BUILD_TYPE}' as none was specified.")
    SET (CMAKE_BUILD_TYPE "${DEFAULT_BUILD_TYPE}" CACHE STRING "Choose the type of build." FORCE)
    SET_PROPERTY(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
ENDIF (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)

IF(CMAKE_BUILD_TYPE MATCHES "Debug")
    INCLUDE (CTest)
    ENABLE_TESTING ()
    ADD_SUBDIRECTORY (tests)
ENDIF(CMAKE_BUILD_TYPE MATCHES "Debug")

# ADD_SUBDIRECTORY (examples)
ADD_SUBDIRECTORY (gearoenix)